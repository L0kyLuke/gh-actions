# test-integration.yml
version: "3.9"
networks: # Declaro la red
  integration-tests:
    driver: bridge
services:
  postgres: # Declaro la BD a usar
    image: postgres:14-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: postgres # usuario por defecto
      POSTGRES_PASSWORD: postgres # password por defecto
      POSTGRES_DB: hangman_db # especificamos BD a levantar por defecto
    networks: # nombramos la red
      - integration-tests

# DESDE AQUÍ LA ACTUALIZACIÓN DEL DOCKER COMPOSE PARA CONSUMIR ESE MIGRATIONS
  build-db-relationships:
    container_name: build-db-relationships
    build: # Haz una build de una imagen a partir del contexto (carpeta actual) y el Dockerfile
      context: .
      dockerfile: Dockerfile.migrations
    environment: # Variables de entorno
      DATABASE_PORT: 5432
      DATABASE_HOST: postgres
      DATABASE_NAME: hangman_db
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_POOL_MIN: 2
      DATABASE_POOL_MAX: 10
    depends_on: # Hasta que el servicio postgres no se levante, este contenedor no se levantará
      - postgres
    command: # Ejecutará estos comandos al levantarse (específicos para este ejemplo)
      [
        "./wait-for-it.sh", # Ejecuta wait-for-it.sh
        "postgres:5432", # wait-for-it no deja que avance hasta que haya respuesta de este servicio
        "--strict", # nos aseguramos respuesta real en ese servicio:puerto
        "--timeout=300", # Desistimos a los 5 minutos
        "--", # Especificamos que tras lo anterior lo siguiente a ejecutar sería lo de abajo
        "./node_modules/knex/bin/cli.js",
        "migrate:latest",
      ]
    networks:
      - integration-tests
# DESDE AQUI AÑADIMOS EL TEST DE INTEGRACIÓN
  test-integration:
    container_name: test-integration
    build:
      context: .
      dockerfile: Dockerfile.test-integration
    environment:
      DATABASE_PORT: 5432
      DATABASE_HOST: postgres
      DATABASE_NAME: hangman_db
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_POOL_MIN: 2
      DATABASE_POOL_MAX: 10
    depends_on:
      - postgres # Esto en principio no sería necesario debido al uso del wait-for-it
      - build-db-relationships
    networks:
      - integration-tests