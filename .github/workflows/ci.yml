name: Repo GitHub

on:
  workflow_dispatch:

jobs:
  # Hacer la build
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: hangman-front/package-lock.json
      - name: build
        working-directory: ./hangman-front
        # Hacemos la build
        run: |
          npm ci
          npm run build --if-present

  # Empaquetado de la imagen de Docker
      - uses: actions/upload-artifact@v3 # Para poder subir los ficheros
        with:
          name: build-code # Usa la API de DockerHub. Si reutilizamos el workflow hay que cambiar el nombre para que no pise al anterior
          path: hangman-front/dist/ # lo que tenemos que subir

  delivery: # Otro job
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: build-code
          path: hangman-front/dist/
      - name: Build and Push Docker Image
        working-directory: ./hangman-front
        env: # Datos para loguearnos en DockerHub ya que nuestras imágenes se alojan allí
          USER: "l0kyluke"
          REPOSITORY: "gh-actions"
          P4SS: ${{ secrets.PAT }}
        run: | # Nos logueamos y hacemos el docker build
          echo $P4SS | docker login ghcr.io -u $USER --password-stdin
          image=$USER/$REPOSITORY:$(date +%s)
          docker build . --file Dockerfile-workflow --tag $image
          echo "$image"
          docker push ghcr.io/$image